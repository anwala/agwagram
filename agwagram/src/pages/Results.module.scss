@use '../styles' as *;

.content {
    display: flex;
    flex-direction: column;
}

.contentHeader {
    margin-bottom: 1rem;
    padding-bottom: $xl;
    border-bottom: var(--b-thin) var(--c-b-neutral);
    height: fit-content;
}

.specialText {
	padding: $xs;
    margin-right: $sm;
	background-color: var(--c-primary);
    color: var(--c-fg-neutral-inverse);
	border-radius: $smRadius;
}

.contentMain {
	padding-top: 2rem;
	padding-bottom: 2rem;
	flex-grow: 1;
	display: flex;
    flex-direction: column;
	align-items: flex-start;
}

.cardGrid {
	display: grid;
	grid-template-columns: repeat(4, 1fr);
	column-gap: 1.5rem;
	row-gap: 1.5rem;
	//grid-auto-flow: dense;
	width: 100%;
    min-height: 320px;
    background-color: var(--c-primary-alpha-light);
    padding: $md;
    border-radius: $mdRadius;
	box-shadow: var(--shadow);

	@media (min-width: 800px) {
		grid-template-columns: repeat(8, 1fr);
	}

	@media (min-width: 1200px) {
		grid-template-columns: repeat(12, 1fr);
	}

}

.tabButtons {
    padding: 0 $md;
	width: 100%;

	> button {
		border-bottom-left-radius: 0;
		border-bottom-right-radius: 0;
		border-bottom: none;
		background-color: var(--c-primary-alpha-light);

		&:not(:last-of-type) {
            margin-right: $sm;
        }

        &:not(:first-of-type) {
            margin-left: $sm;
        }
	}
}

button[data-active=true] {
	background-color: var(--c-primary) !important;
	color: var(--c-fg-neutral-inverse) !important;
}

.toggle {
	$_padding: 4px;
	$_height: 1em;
	$_fullHeight: calc($_height + $_padding + $_padding);
	$_width: 40px;

	width: $_width;
	display: inline-block;
	position: relative;
	top: calc($_padding * 2);

	&:hover > span {
		border-color: var(--c-primary);
	}

	span {
		display: flex;
		align-items: center;
		width: $_width;
		height: $_fullHeight;
		border-radius: $_fullHeight;
		background-color: var(--c-bg-neutral-dim);
		position: relative;
		transition: 0.15s ease;
		pointer-events: none;
		border: 1px solid var(--c-b-neutral);
		&:before {
			content: "";
			display: block;
			position: absolute;
			pointer-events: none;
			height: $_height;
			width: $_height;
			background-color: var(--c-fg-neutral-inverse);
			border-radius: 50%;
			box-shadow: 0 1px 3px 0 rgba(#000, 0.15);
			transition: 0.15s ease;
			transform: translateX($_padding);
		}
	}

	input {
		width: $_width;
		height: $_fullHeight;
		font-size: inherit;
		overflow: hidden;
		position: absolute;
		white-space: nowrap;
		opacity: 0;
		&:checked + span {
			background-color: var(--c-primary);
			&:before {
				transform: translateX(calc(100% + $_padding));
			}
		}
	}
}

.analyzeAnother {
	position: relative;
	top: -12px;

	&:hover {
		text-decoration: none;
	}
}